// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© Masoud Bakhshi

//@version=4
strategy("startegy1", overlay=true)

R= (time % 86400000)
//security("BINANCE:BTCUSDTPERP" , "1" , close)
var h = 0.0
var l = 0.0
var B = 0.0
//************************
h3=0
l3=0
for i=0 to 4
    if security("BINANCE:BTCUSDTPERP" , "1" , high[i]) > h3 
        h3 = security("BINANCE:BTCUSDTPERP" , "1" , high[i])
for i=0 to 4
    if security("BINANCE:BTCUSDTPERP" , "1" , low[i]) < l3 
        l3 = security("BINANCE:BTCUSDTPERP" , "1" , low[i])
//************************
// h3 = highest(security("BINANCE:BTCUSDTPERP" , "1" , high), 5)
// l3 = lowest(security("BINANCE:BTCUSDTPERP" , "1" , low), 5)
if( R < 14.584 * 60 *60*1000 and R > 14.582 * 60 *60*1000) or (R < 16.084 * 60 *60*1000 and R > 16.082 * 60 *60*1000) or (R < 20.584 * 60 *60*1000 and R > 20.582 * 60 *60*1000)
    h := h3
    l := l3

BuySignal=  (security("BINANCE:BTCUSDTPERP" , "1" , close) > h) and (security("BINANCE:BTCUSDTPERP" , "1" , close[1]) > h) and (security("BINANCE:BTCUSDTPERP" , "1" , close[2]) > h) and (security("BINANCE:BTCUSDTPERP" , "1" , low[1])  > h) and (security("BINANCE:BTCUSDTPERP" , "1" , low[0])  > h)   and ((security("BINANCE:BTCUSDTPERP" , "1" , close[1]) > h) and (security("BINANCE:BTCUSDTPERP" , "1" , close[2]) > h) and (security("BINANCE:BTCUSDTPERP" , "1" , close[3]) > h) and (security("BINANCE:BTCUSDTPERP" , "1" , low[2]) > h) and (security("BINANCE:BTCUSDTPERP" , "1" , low[1]) > h))
SellSignal= (security("BINANCE:BTCUSDTPERP" , "1" , close) < l) and (security("BINANCE:BTCUSDTPERP" , "1" , close[1]) < l) and (security("BINANCE:BTCUSDTPERP" , "1" , close[2]) < l) and (security("BINANCE:BTCUSDTPERP" , "1" , high[1]) < l) and (security("BINANCE:BTCUSDTPERP" , "1" , high[0]) < l)   and ((security("BINANCE:BTCUSDTPERP" , "1" , close[1]) < l) and (security("BINANCE:BTCUSDTPERP" , "1" , close[2]) < l) and (security("BINANCE:BTCUSDTPERP" , "1" , close[3]) < l) and (security("BINANCE:BTCUSDTPERP" , "1" , high[2]) < l) and (security("BINANCE:BTCUSDTPERP" , "1" , high[1]) < l))

plot(l , color= color.red)
plot(h)

// date1=timestamp(2022 ,2 , 1)
// date2=timestamp(2022 , 2 ,29)
date1=timestamp("UTC+3:30", 2022 ,2 , 1)
date2=timestamp("UTC+3:30", 2022 ,2 , 28)

//timestamp("GMT+6", 2016, 01, 19, 09, 30)

TimeIsOk1= (time >= date1) and (time <= date2) and (R < 16 * 60 *60*1000) and R > (14.584 * 60 *60*1000)           //6 - 7.30
TimeIsOk2= (time >= date1) and (time <= date2) and (R < 19.5 * 60 *60*1000) and R > (16.084 * 60 *60*1000)           //7.30 - 11  
TimeIsOk3= (time >= date1) and (time <= date2) and (R < 23.5 * 60 *60*1000) and R > (20.584 * 60 *60*1000)         //12 - 3

// TimeIsOk= time > date1 and time < date2 and (TimeIsOk1 or TimeIsOk2)

var winTrade1 = 0.0
var lossTrade1 = 0.0
var winTrade2 = 0.0
var lossTrade2 = 0.0
var winTrade3 = 0.0
var lossTrade3 = 0.0
// if R == 14.5 * 60 *60*1000 or  R == 16 * 60 *60*1000 or  R == 20.5 * 60 *60*1000 
if R == 14.5 * 60 *60*1000
    winTrade1 := strategy.wintrades
    lossTrade1 :=strategy.losstrades

if R == 16 * 60 *60*1000
    winTrade2 := strategy.wintrades
    lossTrade2 :=strategy.losstrades

if R == 20.5 * 60 *60*1000
    winTrade3 := strategy.wintrades
    lossTrade3 :=strategy.losstrades
    
strategy.entry("Buy1" , long= true, qty= 1 , when = BuySignal and TimeIsOk1 and (strategy.losstrades - lossTrade1) <  2 and (strategy.wintrades - winTrade1)  <  1 )
strategy.exit("exitBuy1", "Buy1", profit = 5000, stop = h)

strategy.entry("Sell1" , long= false, qty= 1 , when = SellSignal and TimeIsOk1 and (strategy.losstrades - lossTrade1) <  2 and (strategy.wintrades - winTrade1)  <  1  )
strategy.exit("exitSell1", "Sell1", profit = 5000, stop = l)

//*******************************************************************

strategy.entry("Buy2" , long= true, qty= 1 , when = BuySignal and TimeIsOk2 and (strategy.losstrades - lossTrade2) <  2 and (strategy.wintrades - winTrade2)  <  1 )
strategy.exit("exitBuy2", "Buy2", profit = 5000, stop = h)

strategy.entry("Sell2" , long= false, qty= 1 , when = SellSignal and TimeIsOk2 and (strategy.losstrades - lossTrade2) <  2 and (strategy.wintrades - winTrade2)  <  1  )
strategy.exit("exitSell2", "Sell2", profit = 5000, stop = l)


strategy.entry("Buy3" , long= true, qty= 1 , when = BuySignal and TimeIsOk3 and (strategy.losstrades - lossTrade3) <  2 and (strategy.wintrades - winTrade3)  <  1  )
strategy.exit("exitBuy3", "Buy3", profit = 2000, stop = h)

strategy.entry("Sell3" , long= false, qty= 1 , when = SellSignal and TimeIsOk3 and (strategy.losstrades - lossTrade3) <  2 and (strategy.wintrades - winTrade3)  <  1  )
strategy.exit("exitSell3", "Sell3", profit = 2000, stop = l)